flist <- list.files(path = 'doc', pattern = '.doc', full.names = T)


library(purrr)
library(textreadr)
library(ngram)
library(utils)
withTimeout <- R.utils::withTimeout

# load txt and mark bad files
cat('Reading documents...')
safe_read <- safely(read_document)
txt_all <- map(flist,~safe_read(.x,combine = T)$result)
txt_all <- flatten_chr(map_if(txt_all,is_empty, ~ NA_character_))
bad_files_to_read <- flist[is.na(txt_all)]
flist <- flist[!is.na(txt_all)]
txt_all <- txt_all[!is.na(txt_all)]
cat(' Done!\n')

txt1 <- txt_all[1]
txt2 <- txt_all[2]
n_grams <- 10

# Test
compare_txt <- function(txt1,txt2) {
  if (is.null(txt1) | is.null(txt1)) {
    return(NULL)
  }
  
  total_freq <- function(x){
    x$tot <- sum(x$freq)
    return(x)
  }
  
  txts <- list(txt1,txt2)
  temp_grams <- map(txts, ngram, n = n_grams)
  temp_phrs <- map(temp_grams, get.phrasetable)
  temp_phrs <- map(temp_phrs, total_freq)
  XX <- dplyr::inner_join(temp_phrs[[1]],temp_phrs[[2]], by = 'ngrams')
  XX$freq <- 2*apply(cbind(XX$freq.x,XX$freq.y),1,min)
  sum(XX$freq)/(XX$tot.x[1] + XX$tot.y[1])
}
